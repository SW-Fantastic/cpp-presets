// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.swdc.llama.core.ggml;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.swdc.llama.core.ggml.GGML.*;


    @Properties(inherit = org.swdc.llama.config.GGMLConfigure.class)
public class ggml_type_traits_cpu extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public ggml_type_traits_cpu() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public ggml_type_traits_cpu(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public ggml_type_traits_cpu(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public ggml_type_traits_cpu position(long position) {
            return (ggml_type_traits_cpu)super.position(position);
        }
        @Override public ggml_type_traits_cpu getPointer(long i) {
            return new ggml_type_traits_cpu((Pointer)this).offsetAddress(i);
        }
    
        public native ggml_from_float_t from_float(); public native ggml_type_traits_cpu from_float(ggml_from_float_t setter);
        public native ggml_vec_dot_t vec_dot(); public native ggml_type_traits_cpu vec_dot(ggml_vec_dot_t setter);
        public native @Cast("ggml_type") int vec_dot_type(); public native ggml_type_traits_cpu vec_dot_type(int setter);
        public native @Cast("int64_t") long nrows(); public native ggml_type_traits_cpu nrows(long setter); // number of rows to process simultaneously
    }
