// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.swdc.llama.core;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.swdc.llama.core.ggml.*;
import static org.swdc.llama.core.ggml.GGML.*;

import static org.swdc.llama.core.LLamaCore.*;


    //
    // KV cache
    //

    // TODO: remove llama_kv_cache_view_* API

    // Information associated with an individual cell in the KV cache view.
    @Properties(inherit = org.swdc.llama.config.LLamaConfigure.class)
public class llama_kv_cache_view_cell extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public llama_kv_cache_view_cell() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public llama_kv_cache_view_cell(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public llama_kv_cache_view_cell(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public llama_kv_cache_view_cell position(long position) {
            return (llama_kv_cache_view_cell)super.position(position);
        }
        @Override public llama_kv_cache_view_cell getPointer(long i) {
            return new llama_kv_cache_view_cell((Pointer)this).offsetAddress(i);
        }
    
        // The position for this cell. Takes KV cache shifts into account.
        // May be negative if the cell is not populated.
        public native @Cast("llama_pos") int pos(); public native llama_kv_cache_view_cell pos(int setter);
    }
