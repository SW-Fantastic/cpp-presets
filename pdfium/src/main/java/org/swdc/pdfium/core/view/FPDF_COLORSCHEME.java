// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.swdc.pdfium.core.view;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.swdc.pdfium.core.PdfiumView.*;


// Struct for color scheme.
// Each should be a 32-bit value specifying the color, in 8888 ARGB format.
@Properties(inherit = org.swdc.pdfium.conf.PdfiumViewConfigure.class)
public class FPDF_COLORSCHEME extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public FPDF_COLORSCHEME() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public FPDF_COLORSCHEME(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public FPDF_COLORSCHEME(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public FPDF_COLORSCHEME position(long position) {
        return (FPDF_COLORSCHEME)super.position(position);
    }
    @Override public FPDF_COLORSCHEME getPointer(long i) {
        return new FPDF_COLORSCHEME((Pointer)this).offsetAddress(i);
    }

  public native @Cast("FPDF_DWORD") long path_fill_color(); public native FPDF_COLORSCHEME path_fill_color(long setter);
  public native @Cast("FPDF_DWORD") long path_stroke_color(); public native FPDF_COLORSCHEME path_stroke_color(long setter);
  public native @Cast("FPDF_DWORD") long text_fill_color(); public native FPDF_COLORSCHEME text_fill_color(long setter);
  public native @Cast("FPDF_DWORD") long text_stroke_color(); public native FPDF_COLORSCHEME text_stroke_color(long setter);
}
