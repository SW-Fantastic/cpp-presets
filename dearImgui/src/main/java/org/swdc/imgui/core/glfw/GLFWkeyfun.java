// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.swdc.imgui.core.glfw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.swdc.imgui.core.ImGUIGLFW.*;


/** \brief The function signature for keyboard key callbacks.
 *
 *  This is the function signature for keyboard key callback functions.
 *
 *  @param window [in] The window that received the event.
 *  @param key [in] The [keyboard key](\ref keys) that was pressed or released.
 *  @param scancode [in] The system-specific scancode of the key.
 *  @param action [in] {@code GLFW_PRESS}, {@code GLFW_RELEASE} or {@code GLFW_REPEAT}.
 *  @param mods [in] Bit field describing which [modifier keys](\ref mods) were
 *  held down.
 *
 *  @see \ref input_key
 *  @see glfwSetKeyCallback
 *
 *  @since Added in version 1.0.
 *  \glfw3 Added window handle, scancode and modifier mask parameters.
 *
 *  \ingroup input
 */
@Properties(inherit = org.swdc.imgui.conf.ImGuiGLFWConfigure.class)
public class GLFWkeyfun extends FunctionPointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public    GLFWkeyfun(Pointer p) { super(p); }
    protected GLFWkeyfun() { allocate(); }
    private native void allocate();
    public native void call(GLFWwindow arg0,int arg1,int arg2,int arg3,int arg4);
}
