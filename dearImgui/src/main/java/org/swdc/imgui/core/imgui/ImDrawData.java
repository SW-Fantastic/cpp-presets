// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.swdc.imgui.core.imgui;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.swdc.imgui.core.ImGUICore.*;


// All draw data to render a Dear ImGui frame
// (NB: the style and the naming convention here is a little inconsistent, we currently preserve them for backward compatibility purpose,
// as this is one of the oldest structure exposed by the library! Basically, ImDrawList == CmdList)
@Properties(inherit = org.swdc.imgui.conf.ImGuiCoreConfigure.class)
public class ImDrawData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ImDrawData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ImDrawData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ImDrawData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ImDrawData position(long position) {
        return (ImDrawData)super.position(position);
    }
    @Override public ImDrawData getPointer(long i) {
        return new ImDrawData((Pointer)this).offsetAddress(i);
    }

    public native @Cast("bool") boolean Valid(); public native ImDrawData Valid(boolean setter);             // Only valid after Render() is called and before the next NewFrame() is called.
    public native int CmdListsCount(); public native ImDrawData CmdListsCount(int setter);     // Number of ImDrawList* to render (should always be == CmdLists.size)
    public native int TotalIdxCount(); public native ImDrawData TotalIdxCount(int setter);     // For convenience, sum of all ImDrawList's IdxBuffer.Size
    public native int TotalVtxCount(); public native ImDrawData TotalVtxCount(int setter);     // For convenience, sum of all ImDrawList's VtxBuffer.Size
    public native @ByRef ImVector_ImDrawListPtr CmdLists(); public native ImDrawData CmdLists(ImVector_ImDrawListPtr setter);          // Array of ImDrawList* to render. The ImDrawLists are owned by ImGuiContext and only pointed to from here.
    public native @ByRef ImVec2 DisplayPos(); public native ImDrawData DisplayPos(ImVec2 setter);        // Top-left position of the viewport to render (== top-left of the orthogonal projection matrix to use) (== GetMainViewport()->Pos for the main viewport, == (0.0) in most single-viewport applications)
    public native @ByRef ImVec2 DisplaySize(); public native ImDrawData DisplaySize(ImVec2 setter);       // Size of the viewport to render (== GetMainViewport()->Size for the main viewport, == io.DisplaySize in most single-viewport applications)
    public native @ByRef ImVec2 FramebufferScale(); public native ImDrawData FramebufferScale(ImVec2 setter);  // Amount of pixels for each unit of DisplaySize. Based on io.DisplayFramebufferScale. Generally (1,1) on normal display, (2,2) on OSX with Retina display.
    public native ImGuiViewport OwnerViewport(); public native ImDrawData OwnerViewport(ImGuiViewport setter);     // Viewport carrying the ImDrawData instance, might be of use to the renderer (generally not).
}
