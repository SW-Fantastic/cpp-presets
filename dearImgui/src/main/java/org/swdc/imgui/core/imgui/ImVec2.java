// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.swdc.imgui.core.imgui;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.swdc.imgui.core.ImGUICore.*;
             // Function signature for ImGui::SetAllocatorFunctions()

// ImVec2: 2D vector used to store positions, sizes etc. [Compile-time configurable type]
// This is a frequently used type in the API. Consider using IM_VEC2_CLASS_EXTRA to create implicit cast from/to our preferred type.
// Add '#define IMGUI_DEFINE_MATH_OPERATORS' in your imconfig.h file to benefit from courtesy maths operators for those types.
@Properties(inherit = org.swdc.imgui.conf.ImGuiCoreConfigure.class)
public class ImVec2 extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ImVec2() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ImVec2(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ImVec2(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ImVec2 position(long position) {
        return (ImVec2)super.position(position);
    }
    @Override public ImVec2 getPointer(long i) {
        return new ImVec2((Pointer)this).offsetAddress(i);
    }

    public native float x(); public native ImVec2 x(float setter);
    public native float y(); public native ImVec2 y(float setter);
}
