// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.swdc.imgui.core.imgui;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.swdc.imgui.core.ImGUICore.*;


// (Optional) This is required when enabling multi-viewport. Represent the bounds of each connected monitor/display and their DPI.
// We use this information for multiple DPI support + clamping the position of popups and tooltips so they don't straddle multiple monitors.
@Properties(inherit = org.swdc.imgui.conf.ImGuiCoreConfigure.class)
public class ImGuiPlatformMonitor extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ImGuiPlatformMonitor() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ImGuiPlatformMonitor(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ImGuiPlatformMonitor(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ImGuiPlatformMonitor position(long position) {
        return (ImGuiPlatformMonitor)super.position(position);
    }
    @Override public ImGuiPlatformMonitor getPointer(long i) {
        return new ImGuiPlatformMonitor((Pointer)this).offsetAddress(i);
    }

    public native @ByRef ImVec2 MainPos(); public native ImGuiPlatformMonitor MainPos(ImVec2 setter);
    public native @ByRef ImVec2 MainSize(); public native ImGuiPlatformMonitor MainSize(ImVec2 setter);  // Coordinates of the area displayed on this monitor (Min = upper left, Max = bottom right)
    public native @ByRef ImVec2 WorkPos(); public native ImGuiPlatformMonitor WorkPos(ImVec2 setter);
    public native @ByRef ImVec2 WorkSize(); public native ImGuiPlatformMonitor WorkSize(ImVec2 setter);  // Coordinates without task bars / side bars / menu bars. Used to avoid positioning popups/tooltips inside this region. If you don't have this info, please copy the value for MainPos/MainSize.
    public native float DpiScale(); public native ImGuiPlatformMonitor DpiScale(float setter);           // 1.0f = 96 DPI
    public native Pointer PlatformHandle(); public native ImGuiPlatformMonitor PlatformHandle(Pointer setter);     // Backend dependant data (e.g. HMONITOR, GLFWmonitor*, SDL Display Index, NSScreen*)
}
