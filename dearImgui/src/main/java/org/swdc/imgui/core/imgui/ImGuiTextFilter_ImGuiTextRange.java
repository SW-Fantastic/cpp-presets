// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.swdc.imgui.core.imgui;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.swdc.imgui.core.ImGUICore.*;
      // Maximum Unicode code point supported by this build.
// #endif // #ifdef IMGUI_USE_WCHAR32

// [Internal]
@Properties(inherit = org.swdc.imgui.conf.ImGuiCoreConfigure.class)
public class ImGuiTextFilter_ImGuiTextRange extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ImGuiTextFilter_ImGuiTextRange() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ImGuiTextFilter_ImGuiTextRange(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ImGuiTextFilter_ImGuiTextRange(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ImGuiTextFilter_ImGuiTextRange position(long position) {
        return (ImGuiTextFilter_ImGuiTextRange)super.position(position);
    }
    @Override public ImGuiTextFilter_ImGuiTextRange getPointer(long i) {
        return new ImGuiTextFilter_ImGuiTextRange((Pointer)this).offsetAddress(i);
    }

    public native @Cast("const char*") BytePointer b(); public native ImGuiTextFilter_ImGuiTextRange b(BytePointer setter);
    public native @Cast("const char*") BytePointer e(); public native ImGuiTextFilter_ImGuiTextRange e(BytePointer setter);
}
