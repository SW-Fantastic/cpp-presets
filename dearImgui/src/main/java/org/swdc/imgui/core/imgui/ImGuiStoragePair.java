// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.swdc.imgui.core.imgui;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.swdc.imgui.core.ImGUICore.*;


// [Internal] Key+Value for ImGuiStorage
@Properties(inherit = org.swdc.imgui.conf.ImGuiCoreConfigure.class)
public class ImGuiStoragePair extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ImGuiStoragePair() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ImGuiStoragePair(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ImGuiStoragePair(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ImGuiStoragePair position(long position) {
        return (ImGuiStoragePair)super.position(position);
    }
    @Override public ImGuiStoragePair getPointer(long i) {
        return new ImGuiStoragePair((Pointer)this).offsetAddress(i);
    }

    public native @Cast("ImGuiID") int key(); public native ImGuiStoragePair key(int setter);
        public native int val_i(); public native ImGuiStoragePair val_i(int setter);
        public native float val_f(); public native ImGuiStoragePair val_f(float setter);
        public native Pointer val_p(); public native ImGuiStoragePair val_p(Pointer setter);
}
