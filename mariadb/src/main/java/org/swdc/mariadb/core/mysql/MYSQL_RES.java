// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.swdc.mariadb.core.mysql;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.swdc.mariadb.core.global.*;
import static org.swdc.mariadb.core.MyGlobal.*;
import org.swdc.mariadb.core.com.*;
import static org.swdc.mariadb.core.MyCom.*;

import static org.swdc.mariadb.core.MariaDB.*;



@Properties(inherit = org.swdc.mariadb.conf.MariaDBConfigure.class)
public class MYSQL_RES extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public MYSQL_RES() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public MYSQL_RES(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public MYSQL_RES(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public MYSQL_RES position(long position) {
        return (MYSQL_RES)super.position(position);
    }
    @Override public MYSQL_RES getPointer(long i) {
        return new MYSQL_RES((Pointer)this).offsetAddress(i);
    }

  public native long row_count(); public native MYSQL_RES row_count(long setter);
  public native MYSQL_FIELD fields(); public native MYSQL_RES fields(MYSQL_FIELD setter);
  public native MYSQL_DATA data(); public native MYSQL_RES data(MYSQL_DATA setter);
  public native MYSQL_ROWS data_cursor(); public native MYSQL_RES data_cursor(MYSQL_ROWS setter);
  public native @Cast("unsigned long*") CLongPointer lengths(); public native MYSQL_RES lengths(CLongPointer setter);		/* column lengths of current row */
  public native MYSQL handle(); public native MYSQL_RES handle(MYSQL setter);		/* for unbuffered reads */
  public native @Const st_mysql_methods methods(); public native MYSQL_RES methods(st_mysql_methods setter);
  public native @Cast("char*") BytePointer row(int i); public native MYSQL_RES row(int i, BytePointer setter);
  public native @Cast("char**") PointerPointer row(); public native MYSQL_RES row(PointerPointer setter);			/* If unbuffered read */
  public native @Cast("char*") BytePointer current_row(int i); public native MYSQL_RES current_row(int i, BytePointer setter);
  public native @Cast("char**") PointerPointer current_row(); public native MYSQL_RES current_row(PointerPointer setter);		/* buffer to current row */
  public native @ByRef MEM_ROOT field_alloc(); public native MYSQL_RES field_alloc(MEM_ROOT setter);
  public native @Cast("unsigned int") int field_count(); public native MYSQL_RES field_count(int setter);
  public native @Cast("unsigned int") int current_field(); public native MYSQL_RES current_field(int setter);
  public native @Cast("char") byte eof(); public native MYSQL_RES eof(byte setter);			/* Used by mysql_fetch_row */
  /* mysql_stmt_close() had to cancel this result */
  public native @Cast("char") byte unbuffered_fetch_cancelled(); public native MYSQL_RES unbuffered_fetch_cancelled(byte setter);  
  public native Pointer extension(); public native MYSQL_RES extension(Pointer setter);
}
